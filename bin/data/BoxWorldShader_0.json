{"boxworldShader":{"mainProgram":{"code":{"fragmentCode":{"frag":"#version 400\nlayout(location = 0) out vec4 glFragColor;\nin vec4 glFragCoord; // custom version of gl_FragCoord, used for tiled rendering.\n#define SYNTHCLIPSE_ONLY\nuniform vec3 iResolution;           // viewport resolution (in pixels)\nuniform float iGlobalTime;           // shader playback time (in seconds)\nuniform float iChannelTime[4];       // channel playback time (in seconds)\nuniform vec3 iChannelResolution[4]; // channel resolution (in pixels)\nuniform vec4 iMouse;                // mouse pixel coords. xy: current (if MLB down), zw: click\nuniform vec4 iDate;                 // (year, month, day, time in seconds)\n\nuniform sampler2D iChannel0; \t\t\t//! texture[\"Shadertoy/res/tex16.png\"]\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n\t// TODO: Add your code here.\n\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv, 0.5 + 0.5 * sin(iGlobalTime), 1.0);\n}\n\nvoid main() {\n    vec2 uv = glFragCoord.xy / iResolution.xy;\n    glFragColor = texture(iChannel0, uv);\n}\n\n\n","fragUniformControlList":[{"name":"iChannel0","typeString":"sampler2D","value":"Shadertoy/res/tex16.png"}]},"vertexCode":{"vert":"#version 400\n#define SYNTHCLIPSE_ONLY\nlayout(location = 0) in vec3 VertexPosition;\n\n// Matrix used for tiled rendering:\nuniform mat4 TileMatrix = mat4(1.0);\nuniform vec2 resolution;\n\n// custom version of gl_FragCoord, used for tiled rendering.\nout vec4 glFragCoord;\n\nvoid main() {\n\tvec2 v = VertexPosition.xy;\n\tv.x = v.x * TileMatrix[0][0] + TileMatrix[3][0];\n\tv.y = v.y * TileMatrix[1][1] + TileMatrix[3][1];\n\tv = v * 0.5 + 0.5;\n\tglFragCoord.xy = v * resolution;\n\n\tgl_Position = vec4(VertexPosition, 1.0);\n}\n\n\n"}},"name":"test1.stoy"}}}